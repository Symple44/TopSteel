{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "mcp__ide__getDiagnostics",
      "Bash(pnpm build:*)",
      "Bash(powershell:*)",
      "Bash(cmd /c:*)",
      "Bash(pnpm.cmd build:*)",
      "Bash(npm run build:*)",
      "Bash(npx biome check:*)",
      "Bash(npx tsc:*)",
      "Bash(npx turbo build:*)",
      "Bash(npx @biomejs/biome check:*)",
      "Bash(npx biome lint:*)",
      "Bash(npx biome format:*)",
      "Bash(npm run:*)",
      "Bash(npx next:*)",
      "Bash(npx @biomejs/biome lint)",
      "Bash(npx @biomejs/biome lint:*)",
      "Bash(grep:*)",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(rm:*)",
      "Bash(find:*)",
      "Bash(pnpm install:*)",
      "Bash(vite build)",
      "Bash(pnpm vite:*)",
      "Bash(node:*)",
      "Bash(mv:*)",
      "Bash(npm ls:*)",
      "Bash(pnpm.cmd install:*)",
      "Bash(npm install:*)",
      "Bash(npx tsup:*)",
      "Bash(npx vite:*)",
      "Bash(dir packages)",
      "Bash(pnpm --filter @erp/ui build)",
      "Bash(pnpm run:*)",
      "Bash(tsup)",
      "Bash(echo)",
      "Bash(pnpm type-check:*)",
      "Bash(npx -C \"D:/GitHub/TopSteel/packages/ui\" tsc --noEmit)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(timeout 10s npm run dev)",
      "Bash(timeout 30s npm run build)",
      "Bash(pnpm --filter @erp/web build)",
      "Bash(pnpm.cmd run build:windows)",
      "Bash(pnpm.cmd:*)",
      "Bash(ls:*)",
      "Bash(rimraf:*)",
      "Bash(npx rimraf:*)",
      "Bash(pnpm:*)",
      "Bash(echo $0)",
      "Bash(/c/Users/_/AppData/Roaming/npm/pnpm run build --filter ui)",
      "Bash(bash:*)",
      "Bash(env)",
      "Bash(where pnpm)",
      "Bash(C:Users_AppDataRoamingnpmpnpm.cmd dev)",
      "Bash(npx turbo dev:*)",
      "Bash(taskkill:*)",
      "Bash(./start_web.bat)",
      "Bash(/c/Windows/System32/cmd.exe /c start_web.bat)",
      "Bash(cat:*)",
      "Bash(/c/Users/_/AppData/Roaming/npm/pnpm build)",
      "Bash(npx pnpm build:*)",
      "Bash(cmd.exe:*)",
      "Bash(\"/c/Users/_/AppData/Roaming/npm/pnpm\" install)",
      "Bash(echo $PATH)",
      "Bash(/c/Users/_/AppData/Local/pnpm/pnpm install)",
      "Bash(timeout:*)",
      "mcp__ide__executeCode",
      "Bash(dir)",
      "Bash(C:Users_AppDataRoamingnpmpnpm.cmd build)",
      "Bash(\"C:\\Users\\_\\AppData\\Roaming\\npm\\pnpm.cmd\" build)",
      "Bash(build_temp.bat)",
      "Bash(git checkout:*)",
      "Bash(./run_pnpm.bat)",
      "Bash(C:\\Users\\_\\AppData\\Roaming\\npm\\pnpm install)",
      "Bash(C:Users_AppDataRoamingnpmpnpm.cmd install)",
      "Bash(\"/c/Users/_/AppData/Roaming/npm/pnpm.cmd\" install)",
      "Bash(npx pnpm install:*)",
      "Bash(npm:*)",
      "Bash(touch:*)",
      "Bash(NEXT_DEBUG=1 npx next build)",
      "Bash(NODE_ENV=production npx next build --experimental-build-mode compile)",
      "Bash(NEXT_TELEMETRY_DISABLED=1 npx next build --debug)",
      "Bash(turbo build:*)",
      "Bash(curl:*)",
      "Bash(NODE_ENV=production npm run typeorm -- migration:run -d typeorm.config.ts)",
      "Bash(psql:*)",
      "Bash(npx nest start:*)",
      "Bash(npx nest build:*)",
      "Bash(sed:*)",
      "Bash(pg_isready:*)",
      "Bash(del test-db-connection.js)",
      "Bash(del create-database.js)",
      "Bash(PORT=3003 timeout 8 node start.js hybrid)",
      "Bash(git rm:*)",
      "Bash(PORT=3001 npm run dev)",
      "Bash(set NEXT_PUBLIC_API_URL=http://localhost:3002)",
      "Bash(npx ts-node:*)",
      "Bash(npx tsx:*)",
      "Bash(del force-clean.ts clean-and-sync.ts clean-db.sql manual-index-drop.sql)",
      "Bash(set PGPASSWORD=postgres)",
      "Bash(dropdb:*)",
      "Bash(createdb:*)",
      "Bash(NODE_ENV=development npm run start:dev)",
      "Bash(npx typeorm migration:generate:*)",
      "Bash(npx typeorm migration:run:*)",
      "Bash(pkill:*)",
      "Bash(tasklist)",
      "Bash(PORT=3010 node dist/main.js)",
      "Bash(tail:*)",
      "Bash(PORT=3001 node dist/main.js)",
      "Bash(rg:*)",
      "Bash(true)",
      "Bash(ts-node:*)",
      "Bash(echo:*)",
      "Bash(head:*)",
      "Bash(chmod:*)",
      "Bash(npx eslint:*)",
      "Bash(start cmd /c \"npm run start:prod\")",
      "Bash(set NODE_ENV=production)",
      "Bash(net start:*)",
      "Bash(sc query:*)",
      "Bash(sc start:*)",
      "Bash(start /B npm run start:prod)",
      "Bash(PORT=3010 timeout 15 node dist/main.js)",
      "Bash(start:*)",
      "Bash(PORT=3006 npm run start:prod)",
      "Bash(PORT=3007 npm start)",
      "Bash(PORT=3007 node dist/main.js)",
      "Bash(PORT=3008 node dist/main.js)",
      "Bash(PGPASSWORD=topsteel_prod_2024! psql -h localhost -p 5433 -U topsteel_prod -d topsteel_auth -c \"\\dt user_mfa\")",
      "Bash(PGPASSWORD=postgres psql -U postgres -d erp_topsteel_auth -c \"\\d user_settings\")",
      "Bash(-H \"Content-Type: application/json\")",
      "Bash(set API_PORT=3004)",
      "Bash(npx turbo run:*)",
      "Bash(JWT_SECRET=development-secret-key-min-32-chars-long-topsteel-erp npx ts-node src/scripts/create-admin-user.ts)",
      "Bash(./cleanup-ports.bat)",
      "Bash(npx typeorm-ts-node-commonjs migration:generate:*)",
      "Bash(turbo dev:*)",
      "Bash(npx typeorm query:*)",
      "Bash(redis-cli:*)",
      "Bash(npx typeorm-ts-node-commonjs migration:run:*)",
      "Bash(npx typeorm-ts-node-commonjs migration:create:*)",
      "Bash(NEXT_TELEMETRY_DISABLED=1 npm run build)",
      "Bash(python:*)",
      "Bash(cross-env:*)",
      "Bash(set NODE_OPTIONS=--max-old-space-size=8192 --require ./src/utils/nextjs-15-params-fix.js)",
      "Bash(set NODE_ENV=development)",
      "Bash(set NODE_OPTIONS=--max-old-space-size=8192 --require ./src/utils/next-runtime-override.js)",
      "WebFetch(domain:github.com)",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d erp_topsteel_topsteel -c \"\\dt\")",
      "Bash(NODE_ENV=development timeout 30s pnpm dev)",
      "Bash(START /B pnpm dev)",
      "Bash(gh pr list:*)",
      "Bash(git fetch:*)",
      "Bash(make:*)",
      "Bash(npx:*)",
      "Bash(if exist \".next\" rmdir /s /q \".next\")",
      "Bash(if exist \"node_modules\\.cache\" rmdir /s /q \"node_modules\\.cache\")",
      "Bash(if exist \"tsconfig.tsbuildinfo\" del \"tsconfig.tsbuildinfo\")",
      "Bash(dir:*)",
      "Bash(PORT=3011 timeout 15 npm run dev)",
      "Bash(\"C:\\Users\\_\\AppData\\Roaming\\npm\\pnpm.cmd\" build --filter @erp/api)",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d erp_topsteel_topsteel -c \"SELECT COUNT(*) FROM articles WHERE \"\"isMarketplaceEnabled\"\" = true;\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d erp_topsteel_topsteel -c \"\\d articles\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d erp_topsteel_topsteel -c \"\\dt price_rules\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d erp_topsteel_topsteel -c \"SELECT id, nom FROM societes LIMIT 5\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d erp_topsteel_topsteel -c \"SELECT * FROM migrations ORDER BY timestamp\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d erp_topsteel_topsteel -f D:GitHubTopSteelcreate-partners-tables.sql)",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d erp_topsteel_topsteel -f \"D:\\GitHub\\TopSteel\\create-partners-tables.sql\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d erp_topsteel_topsteel -c \"SELECT * FROM parameters_client LIMIT 5\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d erp_topsteel_topsteel -c \"\\dt param*\")",
      "Bash(PGPASSWORD=postgres psql:*)",
      "Bash(del:*)",
      "Bash(PORT=3002 timeout 30s pnpm dev)",
      "Bash(PORT=3002 pnpm dev)",
      "Bash(NODE_ENV=development REDIS_ENABLED=true PORT=3005 pnpm dev)"
    ],
    "deny": []
  }
}
