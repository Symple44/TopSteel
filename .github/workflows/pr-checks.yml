# .github/workflows/pr-checks.yml
name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  NODE_OPTIONS: '--max-old-space-size=8192'
  FORCE_COLOR: '1'
  NPM_CONFIG_COLOR: 'always'

permissions:
  contents: read
  pull-requests: write
  issues: write
  checks: write

jobs:
  # Vérification de la taille de la PR
  pr-size:
    name: Check PR Size
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check PR size
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const additions = pr.additions;
            const deletions = pr.deletions;
            const total = additions + deletions;

            let label = '';
            if (total < 10) label = 'size/XS';
            else if (total < 50) label = 'size/S';
            else if (total < 200) label = 'size/M';
            else if (total < 500) label = 'size/L';
            else label = 'size/XL';

            // Ajouter le label
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              labels: [label]
            });

            // Avertir si la PR est trop grande
            if (total > 500) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: '⚠️ Cette PR contient plus de 500 lignes de changements. Considérez la diviser en PRs plus petites pour faciliter la review.'
              });
            }

  # Auto-labeling basé sur les fichiers modifiés
  auto-label:
    name: Auto Label
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/labeler@v6
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          configuration-path: .github/pr-labeler.yml

  # Vérification des commits conventionnels
  commitlint:
    name: Lint Commits
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check commits
        uses: wagoid/commitlint-github-action@v6
        with:
          configFile: commitlint.config.js

  # Analyse des fichiers modifiés
  changed-files:
    name: Analyze Changed Files
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      web: ${{ steps.changes.outputs.web }}
      api: ${{ steps.changes.outputs.api }}
      packages: ${{ steps.changes.outputs.packages }}
    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            web:
              - 'apps/web/**'
            api:
              - 'apps/api/**'
            packages:
              - 'packages/**'

      - name: Comment changed areas
        uses: actions/github-script@v7
        with:
          script: |
            const changes = {
              web: ${{ steps.changes.outputs.web }},
              api: ${{ steps.changes.outputs.api }},
              packages: ${{ steps.changes.outputs.packages }}
            };

            const affected = Object.entries(changes)
              .filter(([_, changed]) => changed === 'true')
              .map(([area, _]) => area);

            if (affected.length > 0) {
              const body = `📦 **Zones affectées**: ${affected.join(', ')}`;
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body
              });
            }
