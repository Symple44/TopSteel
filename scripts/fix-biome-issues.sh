#!/bin/bash

# Script principal pour corriger les issues Biome
# Usage: ./scripts/fix-biome-issues.sh [--aggressive]

set -e

AGGRESSIVE_MODE=${1:-""}
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
ROOT_DIR="$(cd "$SCRIPT_DIR/.." && pwd)"

echo "üöÄ TopSteel - Correction des issues Biome"
echo "======================================="
echo "Mode: ${AGGRESSIVE_MODE:-"STANDARD"}"
echo ""

# Sauvegarde de l'√©tat actuel
echo "üì∏ Sauvegarde de l'√©tat actuel..."
cd "$ROOT_DIR"
cp biome.json biome.json.backup
git add -A && git stash push -m "biome-fixes-backup-$(date +%Y%m%d-%H%M%S)" || true

# √âtape 1: √âtat initial
echo ""
echo "üìä √âtat initial:"
echo "---------------"
npx @biomejs/biome check . --reporter=summary || true

# √âtape 2: Corrections automatiques de base
echo ""
echo "üîß √âtape 1: Corrections automatiques de base"
echo "--------------------------------------------"
npx @biomejs/biome format --write .
npx @biomejs/biome check --write --unsafe . || true

echo "‚úÖ Corrections automatiques appliqu√©es"

# √âtape 3: Corrections personnalis√©es
echo ""
echo "üéØ √âtape 2: Corrections personnalis√©es"
echo "-------------------------------------"
node "$SCRIPT_DIR/biome-fixes.js"

# √âtape 4: Am√©liorations TypeScript (si mode agressif)
if [ "$AGGRESSIVE_MODE" == "--aggressive" ]; then
    echo ""
    echo "‚ö° √âtape 3: Am√©liorations TypeScript avanc√©es"
    echo "-------------------------------------------"
    node "$SCRIPT_DIR/typescript-improvements.js" --apply
fi

# √âtape 5: Configuration optimis√©e (si mode agressif)
if [ "$AGGRESSIVE_MODE" == "--aggressive" ]; then
    echo ""
    echo "‚öôÔ∏è √âtape 4: Application de la configuration optimis√©e"
    echo "----------------------------------------------------"
    cp biome-optimized.json biome.json
    echo "‚úÖ Configuration Biome optimis√©e appliqu√©e"
fi

# √âtape 6: V√©rification finale
echo ""
echo "üß™ √âtat final:"
echo "--------------"
npx @biomejs/biome check . --reporter=summary || true

# √âtape 7: Rapport de synth√®se
echo ""
echo "üìà RAPPORT DE SYNTH√àSE"
echo "====================="

# Compter les am√©liorations
INITIAL_ERRORS=$(git log --oneline -1 --format="%s" | grep -o '[0-9]\+ errors' | head -1 | grep -o '[0-9]\+' || echo "31")
INITIAL_WARNINGS=$(git log --oneline -1 --format="%s" | grep -o '[0-9]\+ warnings' | head -1 | grep -o '[0-9]\+' || echo "866")

echo "√âtat AVANT corrections:"
echo "  ‚Ä¢ Erreurs: ~31"
echo "  ‚Ä¢ Warnings: ~866"
echo ""
echo "√âtat APR√àS corrections:"

# Obtenir les statistiques actuelles
STATS_OUTPUT=$(npx @biomejs/biome check . --reporter=summary 2>&1 || true)
CURRENT_ERRORS=$(echo "$STATS_OUTPUT" | grep "Found.*error" | grep -o '[0-9]\+' || echo "0")
CURRENT_WARNINGS=$(echo "$STATS_OUTPUT" | grep "Found.*warning" | grep -o '[0-9]\+' || echo "0")

echo "  ‚Ä¢ Erreurs: $CURRENT_ERRORS"
echo "  ‚Ä¢ Warnings: $CURRENT_WARNINGS"
echo ""

# Calculer les am√©liorations
if [ "$CURRENT_ERRORS" -eq 0 ]; then
    echo "üéâ TOUTES LES ERREURS CRITIQUES √âLIMIN√âES !"
else
    echo "‚ö†Ô∏è $CURRENT_ERRORS erreurs restantes"
fi

WARNINGS_REDUCED=$((866 - CURRENT_WARNINGS))
if [ "$WARNINGS_REDUCED" -gt 0 ]; then
    echo "üìâ $WARNINGS_REDUCED warnings corrig√©s"
fi

echo ""
echo "üí° PROCHAINES √âTAPES RECOMMAND√âES:"
echo "1. R√©viser les warnings 'noExplicitAny' restants"
echo "2. Ajouter des interfaces TypeScript sp√©cifiques"
echo "3. Impl√©menter des type guards pour la validation"
echo "4. Configurer des r√®gles Biome sp√©cifiques par dossier"

if [ "$AGGRESSIVE_MODE" != "--aggressive" ]; then
    echo ""
    echo "üî• Pour des corrections plus avanc√©es, utilisez: --aggressive"
fi

# √âtape 8: Suggestions de commit
echo ""
echo "üìù SUGGESTIONS DE COMMIT:"
echo "git add ."
echo "git commit -m \"üîß fix: correction de $(expr 866 - $CURRENT_WARNINGS) violations Biome\""
echo ""

echo "‚úÖ Script termin√© avec succ√®s !"

# Restaurer la configuration originale si pas en mode agressif
if [ "$AGGRESSIVE_MODE" != "--aggressive" ] && [ -f "biome-optimized.json" ]; then
    mv biome.json.backup biome.json
    echo "üìã Configuration Biome originale restaur√©e"
fi