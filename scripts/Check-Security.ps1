#!/usr/bin/env pwsh
# Script de v√©rification s√©curit√© TopSteel ERP
# Usage: .\Check-Security.ps1

Write-Host "üõ°Ô∏è V√©rification s√©curit√© TopSteel ERP" -ForegroundColor Cyan

# 1. V√©rifier les d√©pendances
Write-Host "`nüì¶ Audit des d√©pendances..." -ForegroundColor Yellow
cd apps/api
pnpm audit

# 2. V√©rifier les headers de s√©curit√© (si le serveur tourne)
Write-Host "`nüîç Test des headers de s√©curit√©..." -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "http://localhost:3001/health" -Method HEAD -ErrorAction SilentlyContinue
    if ($response.Headers["X-Frame-Options"]) {
        Write-Host "‚úÖ X-Frame-Options configur√©" -ForegroundColor Green
    }
    if ($response.Headers["Content-Security-Policy"]) {
        Write-Host "‚úÖ CSP configur√©" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ö†Ô∏è Serveur non accessible pour les tests" -ForegroundColor Yellow
}

# 3. V√©rifier les certificats SSL (en production)
if ($env:NODE_ENV -eq "production") {
    Write-Host "`nüîê V√©rification SSL..." -ForegroundColor Yellow
    if (Test-Path "/etc/ssl/certs/topsteel") {
        Write-Host "‚úÖ Certificats SSL trouv√©s" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è Certificats SSL manquants" -ForegroundColor Yellow
    }
}

Write-Host "`n‚úÖ V√©rification termin√©e" -ForegroundColor Green
