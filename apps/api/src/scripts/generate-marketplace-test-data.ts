import { NestFactory } from '@nestjs/core'
import { AppModule } from '../app.module'
import { ModuleRegistryService } from '../modules/marketplace/services/module-registry.service'
import { MarketplaceService } from '../modules/marketplace/services/marketplace.service'
import { HrAggregatorService } from '../modules/marketplace/real-modules/hr-aggregator/services/hr-aggregator.service'
import { ProcurementPoolService } from '../modules/marketplace/real-modules/procurement-pool/services/procurement-pool.service'

async function generateTestData() {
  console.log('üöÄ G√©n√©ration des donn√©es de test pour la Marketplace...')

  const app = await NestFactory.createApplicationContext(AppModule)
  
  try {
    const moduleRegistryService = app.get(ModuleRegistryService)
    const marketplaceService = app.get(MarketplaceService)

    // 1. Enregistrer les modules dans le registre
    console.log('üìã Enregistrement des modules r√©els...')
    console.log('  ‚ÑπÔ∏è Les modules sont enregistr√©s automatiquement au d√©marrage')

    // 2. V√©rifier la configuration du module RH
    console.log('üë• Configuration du module RH...')
    await generateHrTestData(app)

    // 3. V√©rifier la configuration du module Achats
    console.log('üõí Configuration du module Achats...')
    await generateProcurementTestData(app)

    // 4. Informations sur les statistiques
    console.log('üìä Statistiques marketplace...')
    await generateMarketplaceStats(app)

    console.log('‚úÖ G√©n√©ration des donn√©es de test termin√©e!')
    console.log('\nüìà Statistiques du registre:')
    console.log(JSON.stringify(moduleRegistryService.getRegistryStats(), null, 2))

  } catch (error) {
    console.error('‚ùå Erreur lors de la g√©n√©ration des donn√©es de test:', error)
  } finally {
    await app.close()
  }
}

async function generateHrTestData(app: any) {
  try {
    console.log('  ‚ÑπÔ∏è Module HR n√©cessite configuration r√©elle des APIs (HelloWork, Indeed, LinkedIn)')
    console.log('     - HelloWork: API Key requise')
    console.log('     - Indeed: Publisher Account requis')
    console.log('     - LinkedIn: App avec Jobs API requise')
  } catch (error) {
    console.error('  ‚ùå Erreur:', error instanceof Error ? error.message : String(error))
  }
}

async function generateProcurementTestData(app: any) {
  try {
    console.log('  ‚ÑπÔ∏è Module Achats pr√™t √† fonctionner avec de vrais fournisseurs')
    console.log('     - Ajoutez vos fournisseurs via l\'API')
    console.log('     - Cr√©ez des demandes d\'achat r√©elles')
    console.log('     - Formez des pools avec de vrais participants')
  } catch (error) {
    console.error('  ‚ùå Erreur:', error instanceof Error ? error.message : String(error))
  }
}

async function generateMarketplaceStats(app: any) {
  try {
    console.log('  ‚ÑπÔ∏è Statistiques marketplace non g√©n√©r√©es - utilisation r√©elle requise')
    console.log('     - Les t√©l√©chargements seront compt√©s lors des vraies installations')
    console.log('     - Les √©valuations viendront des vrais utilisateurs')
    console.log('     - Utilisez l\'API pour voir les statistiques r√©elles')
  } catch (error) {
    console.error('  ‚ùå Erreur:', error instanceof Error ? error.message : String(error))
  }
}

// Ex√©cuter le script si appel√© directement
if (require.main === module) {
  generateTestData().catch(console.error)
}

export { generateTestData }