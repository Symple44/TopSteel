#!/usr/bin/env ts-node
/**
 * Script pour v√©rifier les tables dans la base AUTH
 */

import { DataSource } from 'typeorm'

async function checkAuthDbTables() {
  console.log('üîç V√©rification des tables dans la base AUTH...\n')

  const dataSource = new DataSource({
    type: 'postgres',
    host: process.env.DB_HOST || 'localhost',
    port: parseInt(process.env.DB_PORT || '5432'),
    username: process.env.DB_USERNAME || 'postgres',
    password: process.env.DB_PASSWORD || 'postgres',
    database: process.env.DB_AUTH_NAME || 'erp_topsteel_auth',
    logging: false
  })
  
  try {
    await dataSource.initialize()
    console.log('‚úÖ Connexion √† la base AUTH √©tablie')
    console.log(`üìÇ Base de donn√©es: ${process.env.DB_AUTH_NAME || 'erp_topsteel_auth'}`)

    // V√©rifier les tables de menu dans AUTH
    const tables = await dataSource.query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public' 
      AND table_name LIKE '%menu%'
      ORDER BY table_name
    `)
    
    console.log('\nüìã Tables de menu trouv√©es dans AUTH:')
    if (tables.length === 0) {
      console.log('   ‚ùå Aucune table de menu trouv√©e dans AUTH')
    } else {
      tables.forEach((table: any) => {
        console.log(`   ‚úÖ ${table.table_name}`)
      })
    }

    // V√©rifier sp√©cifiquement menu_configurations
    const menuConfigExists = await dataSource.query(`
      SELECT EXISTS (
        SELECT FROM information_schema.tables 
        WHERE table_schema = 'public' 
        AND table_name = 'menu_configurations'
      );
    `)
    
    console.log(`\nüîß Table menu_configurations dans AUTH: ${menuConfigExists[0].exists ? '‚úÖ Existe' : '‚ùå N\'existe pas'}`)

    if (menuConfigExists[0].exists) {
      // Compter les donn√©es
      const count = await dataSource.query('SELECT COUNT(*) as count FROM menu_configurations')
      console.log(`üìä Nombre de configurations: ${count[0].count}`)
    }

  } catch (error: any) {
    console.error('‚ùå Erreur lors de la v√©rification:', error.message)
    if (error.message.includes('does not exist')) {
      console.log('\n‚ö†Ô∏è  La base de donn√©es AUTH n\'existe pas!')
      console.log(`   Tentative de connexion √†: ${process.env.DB_AUTH_NAME || 'erp_topsteel_auth'}`)
      console.log('   Les tables de menu pourraient √™tre dans la base principale.')
    }
  } finally {
    if (dataSource.isInitialized) {
      await dataSource.destroy()
    }
  }
}

// Ex√©cuter si appel√© directement
if (require.main === module) {
  checkAuthDbTables().catch(console.error)
}

export { checkAuthDbTables }