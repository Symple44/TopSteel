apps\marketplace-storefront\src\components\page-builder\sections\TextBlockSection.tsx:51:11 lint/security/noDangerouslySetInnerHtml ━━━━━━━━━━

  ! Avoid passing content using the dangerouslySetInnerHTML prop.
  
    49 │         <div
    50 │           className="prose prose-lg max-w-none"
  > 51 │           dangerouslySetInnerHTML={{ __html: content.content }}
       │           ^^^^^^^^^^^^^^^^^^^^^^^
    52 │         />
    53 │       </div>
  
  ! Setting content using code can expose users to cross-site scripting (XSS) attacks
  

apps\marketplace-storefront\src\components\product\product-detail.tsx:383:21 lint/security/noDangerouslySetInnerHtml ━━━━━━━━━━

  ! Avoid passing content using the dangerouslySetInnerHTML prop.
  
    381 │                   <div
    382 │                     className="prose prose-sm max-w-none"
  > 383 │                     dangerouslySetInnerHTML={{ __html: product.description }}
        │                     ^^^^^^^^^^^^^^^^^^^^^^^
    384 │                   />
    385 │                 ) : (
  
  ! Setting content using code can expose users to cross-site scripting (XSS) attacks
  

apps\web\src\app\(dashboard)\settings\security\page.tsx:124:7 lint/correctness/useExhaustiveDependencies ━━━━━━━━━━

  ! loadMFAData changes on every re-render and should not be used as a hook dependency.
  
    122 │   useEffect(() => {
    123 │     loadMFAData()
  > 124 │   }, [loadMFAData])
        │       ^^^^^^^^^^^
    125 │ 
    126 │   const handleSetupTOTP = async () => {
  
  i To fix this, wrap the definition of loadMFAData in its own useCallback() hook.
  

apps\web\src\app\api\admin\menus\user-data-view\route.ts:36:28 lint/suspicious/noExplicitAny ━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    34 │       {
    35 │         success: false,
  > 36 │         message: (error as any)?.response?.data?.message || 'Erreur serveur',
       │                            ^^^
    37 │       },
    38 │       {
  
  i any disables many type checking rules. Its use should be avoided.
  

apps\web\src\app\api\admin\menus\user-data-view\route.ts:39:27 lint/suspicious/noExplicitAny ━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    37 │       },
    38 │       {
  > 39 │         status: (error as any)?.response?.status || 500,
       │                           ^^^
    40 │       }
    41 │     )
  
  i any disables many type checking rules. Its use should be avoided.
  

apps\web\src\app\api\admin\system-parameters\by-category\route.ts:23:29 lint/suspicious/noExplicitAny ━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    21 │   isEditable: boolean
    22 │   isSecret: boolean
  > 23 │   metadata?: Record<string, any>
       │                             ^^^
    24 │   createdAt: string
    25 │   updatedAt: string
  
  i any disables many type checking rules. Its use should be avoided.
  

apps\web\src\app\api\admin\system-parameters\by-category\route.ts:47:63 lint/suspicious/noExplicitAny ━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    45 │     } else {
    46 │       // Grouper par catégorie
  > 47 │       const parametersByCategory = allParameters.reduce((acc: any, param: SystemParameter) => {
       │                                                               ^^^
    48 │         if (!acc[param.category]) {
    49 │           acc[param.category] = []
  
  i any disables many type checking rules. Its use should be avoided.
  

apps\web\src\app\api\admin\translations\route.ts:9:71 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
     8 │ // Fonction pour vérifier l'authentification basique
   > 9 │ function verifyAuth(request: NextRequest): { isValid: boolean; user?: any } {
       │                                                                       ^^^
    10 │   try {
    11 │     // Récupérer le token depuis les cookies ou l'header
  
  i any disables many type checking rules. Its use should be avoided.
  

apps\web\src\app\api\admin\translations\route.ts:75:35 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    73 │     // Lire les modifications depuis la base de données ou fichier de configuration
    74 │     const overridesPath = path.join(process.cwd(), 'data/translation-overrides.json')
  > 75 │     let overrides: Record<string, any> = {}
       │                                   ^^^
    76 │ 
    77 │     try {
  
  i any disables many type checking rules. Its use should be avoided.
  

apps\web\src\app\api\admin\translations\route.ts:128:35 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    126 │     // Lire les modifications existantes
    127 │     const overridesPath = path.join(dataDir, 'translation-overrides.json')
  > 128 │     let overrides: Record<string, any> = {}
        │                                   ^^^
    129 │ 
    130 │     try {
  
  i any disables many type checking rules. Its use should be avoided.
  

apps\web\src\app\api\admin\translations\route.ts:187:35 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    185 │     // Lire les modifications existantes
    186 │     const overridesPath = path.join(dataDir, 'translation-overrides.json')
  > 187 │     let overrides: Record<string, any> = {}
        │                                   ^^^
    188 │ 
    189 │     try {
  
  i any disables many type checking rules. Its use should be avoided.
  

apps\web\src\app\api\admin\translations\route.ts:200:34 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    199 │     // Traiter chaque traduction
  > 200 │     translations.forEach((entry: any) => {
        │                                  ^^^
    201 │       if (entry.id) {
    202 │         const isNew = !overrides[entry.id]
  
  i any disables many type checking rules. Its use should be avoided.
  

apps\web\src\app\api\images\upload\route.ts:42:19 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    40 │       file.name,
    41 │       file.type,
  > 42 │       category as any,
       │                   ^^^
    43 │       session.user.id,
    44 │       {
  
  i any disables many type checking rules. Its use should be avoided.
  

apps\web\src\app\api\images\upload\route.ts:45:35 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    43 │       session.user.id,
    44 │       {
  > 45 │         entityType: entityType as any,
       │                                   ^^^
    46 │         entityId,
    47 │         alt,
  
  i any disables many type checking rules. Its use should be avoided.
  

apps\web\src\app\api\notifications\route.ts:13:26 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    11 │ // Mock de connexion à la base de données (à remplacer par la vraie connexion)
    12 │ class MockDatabaseConnection {
  > 13 │   private notifications: any[] = []
       │                          ^^^
    14 │   private settings: any[] = []
    15 │   private reads: any[] = []
  
  i any disables many type checking rules. Its use should be avoided.
  

apps\web\src\app\api\notifications\route.ts:14:21 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    12 │ class MockDatabaseConnection {
    13 │   private notifications: any[] = []
  > 14 │   private settings: any[] = []
       │                     ^^^
    15 │   private reads: any[] = []
    16 │ 
  
  i any disables many type checking rules. Its use should be avoided.
  

apps\web\src\app\api\notifications\route.ts:15:18 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    13 │   private notifications: any[] = []
    14 │   private settings: any[] = []
  > 15 │   private reads: any[] = []
       │                  ^^^
    16 │ 
    17 │   async query<T = any>(sql: string, _params?: any[]): Promise<T[]> {
  
  i any disables many type checking rules. Its use should be avoided.
  

apps\web\src\app\api\notifications\route.ts:17:19 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    15 │   private reads: any[] = []
    16 │ 
  > 17 │   async query<T = any>(sql: string, _params?: any[]): Promise<T[]> {
       │                   ^^^
    18 │     // Simulation basique pour les tests
    19 │     if (sql.includes('notification_settings')) {
  
  i any disables many type checking rules. Its use should be avoided.
  

apps\web\src\app\api\notifications\route.ts:17:47 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    15 │   private reads: any[] = []
    16 │ 
  > 17 │   async query<T = any>(sql: string, _params?: any[]): Promise<T[]> {
       │                                               ^^^
    18 │     // Simulation basique pour les tests
    19 │     if (sql.includes('notification_settings')) {
  
  i any disables many type checking rules. Its use should be avoided.
  

apps\web\src\app\api\notifications\route.ts:31:39 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    29 │   }
    30 │ 
  > 31 │   async execute(sql: string, params?: any[]): Promise<{ insertId?: number; affectedRows: number }> {
       │                                       ^^^
    32 │     // Simulation basique pour les tests
    33 │     if (sql.includes('INSERT INTO notifications')) {
  
  i any disables many type checking rules. Its use should be avoided.
  

The number of diagnostics exceeds the limit allowed. Use --max-diagnostics to increase it.
Diagnostics not shown: 739.
Checked 1633 files in 966ms. No fixes applied.
Found 7 errors.
Found 750 warnings.
check ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Some errors were emitted while running checks.
  

